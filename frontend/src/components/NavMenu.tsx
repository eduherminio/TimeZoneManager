import * as React from 'react';
import { connect } from 'react-redux';
import { Collapse, Container, Navbar, NavbarBrand, NavbarToggler, NavItem, NavLink } from 'reactstrap';
import { Link, RouteComponentProps } from 'react-router-dom';
import { ExistingPages } from '../ExistingPages';
import * as SessionStore from '../store/Session';
import { ApplicationState } from '../store';
import { PermissionName } from '../server/autogeneratedclients/TimeZoneManagerClient'
import './NavMenu.css';

type NavMenuProps =
    SessionStore.SessionState // ... state we've requested from the Redux store
    & typeof SessionStore.actionCreators // ... plus action creators we've requested
    & RouteComponentProps<{}>; // ... plus incoming routing parameters

class NavMenu extends React.PureComponent<NavMenuProps, { isOpen: boolean }> {
    public state = {
        isOpen: false,
    };

    constructor(props: NavMenuProps) {
        super(props);

        this.handleUsersClick = this.handleUsersClick.bind(this);
        this.handleTimeZonesClick = this.handleTimeZonesClick.bind(this);
    }

    handleUsersClick = (e: any) => {
        if (this.props.permissions.indexOf(PermissionName.UserRead.toString()) === -1) {
            e.preventDefault()
        }
    }

    handleTimeZonesClick = (e: any) => {
        if (this.props.permissions.indexOf(PermissionName.TimeZoneRead.toString()) === -1) {
            e.preventDefault()
        }
    }

    public render() {
        return (
            <header>
                <Navbar className="navbar-expand-sm navbar-toggleable-sm border-bottom box-shadow mb-3" light>
                    <Container>
                        <NavbarBrand tag={Link} to="/">TimeZone manager</NavbarBrand>
                        <NavbarToggler onClick={this.toggle} className="mr-2" />
                        <Collapse className="d-sm-inline-flex flex-sm-row-reverse" isOpen={this.state.isOpen} navbar>
                            <ul className="navbar-nav flex-grow">
                                <NavItem >
                                    <NavLink tag={Link} className="text-dark" onClick={this.handleUsersClick} to={ExistingPages.users}>Users</NavLink>
                                </NavItem>
                                <NavItem>
                                    <NavLink tag={Link} className="text-dark" onClick={this.handleTimeZonesClick} to={ExistingPages.timezones}>TimeZones</NavLink>
                                </NavItem>
                                <NavItem>
                                    <NavLink tag={Link} className="text-dark" to={ExistingPages.logout}>Log out</NavLink>
                                </NavItem>
                            </ul>
                        </Collapse>
                    </Container>
                </Navbar>
            </header>
        );
    }

    private toggle = () => {
        this.setState({
            isOpen: !this.state.isOpen
        });
    }
}

export default connect(
    (state: ApplicationState) => state.session, // Selects which state properties are merged into the component's props
    SessionStore.actionCreators // Selects which action creators are merged into the component's props
)(NavMenu as any);
